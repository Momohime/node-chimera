/****************************************************************************
** Meta object code from reading C++ file 'chimera.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.0.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "chimera.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'chimera.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.0.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_WebPage_t {
    QByteArrayData data[9];
    char stringdata[70];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_WebPage_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_WebPage_t qt_meta_stringdata_WebPage = {
    {
QT_MOC_LITERAL(0, 0, 7),
QT_MOC_LITERAL(1, 8, 25),
QT_MOC_LITERAL(2, 34, 0),
QT_MOC_LITERAL(3, 35, 9),
QT_MOC_LITERAL(4, 45, 4),
QT_MOC_LITERAL(5, 50, 4),
QT_MOC_LITERAL(6, 55, 4),
QT_MOC_LITERAL(7, 60, 2),
QT_MOC_LITERAL(8, 63, 5)
    },
    "WebPage\0shouldInterruptJavaScript\0\0"
    "sendEvent\0type\0arg1\0arg2\0go\0delta\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_WebPage[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       5,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   39,    2, 0x0a,
       3,    3,   40,    2, 0x0a,
       3,    2,   47,    2, 0x2a,
       3,    1,   52,    2, 0x2a,
       7,    1,   55,    2, 0x0a,

 // slots: parameters
    QMetaType::Bool,
    QMetaType::Void, QMetaType::QString, QMetaType::QVariant, QMetaType::QVariant,    4,    5,    6,
    QMetaType::Void, QMetaType::QString, QMetaType::QVariant,    4,    5,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::Bool, QMetaType::Int,    8,

       0        // eod
};

void WebPage::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        WebPage *_t = static_cast<WebPage *>(_o);
        switch (_id) {
        case 0: { bool _r = _t->shouldInterruptJavaScript();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 1: _t->sendEvent((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QVariant(*)>(_a[2])),(*reinterpret_cast< const QVariant(*)>(_a[3]))); break;
        case 2: _t->sendEvent((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QVariant(*)>(_a[2]))); break;
        case 3: _t->sendEvent((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 4: { bool _r = _t->go((*reinterpret_cast< int(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        default: ;
        }
    }
}

const QMetaObject WebPage::staticMetaObject = {
    { &QWebPage::staticMetaObject, qt_meta_stringdata_WebPage.data,
      qt_meta_data_WebPage,  qt_static_metacall, 0, 0}
};


const QMetaObject *WebPage::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *WebPage::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_WebPage.stringdata))
        return static_cast<void*>(const_cast< WebPage*>(this));
    return QWebPage::qt_metacast(_clname);
}

int WebPage::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWebPage::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 5)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 5;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 5)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 5;
    }
    return _id;
}
struct qt_meta_stringdata_Chimera_t {
    QByteArrayData data[19];
    char stringdata[155];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_Chimera_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_Chimera_t qt_meta_stringdata_Chimera = {
    {
QT_MOC_LITERAL(0, 0, 7),
QT_MOC_LITERAL(1, 8, 12),
QT_MOC_LITERAL(2, 21, 0),
QT_MOC_LITERAL(3, 22, 7),
QT_MOC_LITERAL(4, 30, 8),
QT_MOC_LITERAL(5, 39, 8),
QT_MOC_LITERAL(6, 48, 11),
QT_MOC_LITERAL(7, 60, 6),
QT_MOC_LITERAL(8, 67, 9),
QT_MOC_LITERAL(9, 77, 4),
QT_MOC_LITERAL(10, 82, 4),
QT_MOC_LITERAL(11, 87, 4),
QT_MOC_LITERAL(12, 92, 6),
QT_MOC_LITERAL(13, 99, 6),
QT_MOC_LITERAL(14, 106, 7),
QT_MOC_LITERAL(15, 114, 10),
QT_MOC_LITERAL(16, 125, 5),
QT_MOC_LITERAL(17, 131, 9),
QT_MOC_LITERAL(18, 141, 12)
    },
    "Chimera\0unlockSignal\0\0capture\0fileName\0"
    "callback\0errorResult\0result\0sendEvent\0"
    "type\0arg1\0arg2\0finish\0inject\0content\0"
    "loadStatus\0state\0userAgent\0viewportSize\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Chimera[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       8,   14, // methods
       5,   82, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    0,   54,    2, 0x05,

 // slots: name, argc, parameters, tag, flags
       3,    1,   55,    2, 0x0a,
       5,    2,   58,    2, 0x0a,
       8,    3,   63,    2, 0x0a,
       8,    2,   70,    2, 0x2a,
       8,    1,   75,    2, 0x2a,
      12,    1,   78,    2, 0x08,
      13,    0,   81,    2, 0x08,

 // signals: parameters
    QMetaType::Void,

 // slots: parameters
    QMetaType::Bool, QMetaType::QString,    4,
    QMetaType::Void, QMetaType::QString, QMetaType::QString,    6,    7,
    QMetaType::Void, QMetaType::QString, QMetaType::QVariant, QMetaType::QVariant,    9,   10,   11,
    QMetaType::Void, QMetaType::QString, QMetaType::QVariant,    9,   10,
    QMetaType::Void, QMetaType::QString,    9,
    QMetaType::Void, QMetaType::Bool,    2,
    QMetaType::Void,

 // properties: name, type, flags
      14, QMetaType::QString, 0x00095103,
      15, QMetaType::QString, 0x00095001,
      16, QMetaType::QString, 0x00095103,
      17, QMetaType::QString, 0x00095103,
      18, QMetaType::QVariantMap, 0x00095103,

       0        // eod
};

void Chimera::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Chimera *_t = static_cast<Chimera *>(_o);
        switch (_id) {
        case 0: _t->unlockSignal(); break;
        case 1: { bool _r = _t->capture((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 2: _t->callback((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 3: _t->sendEvent((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QVariant(*)>(_a[2])),(*reinterpret_cast< const QVariant(*)>(_a[3]))); break;
        case 4: _t->sendEvent((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QVariant(*)>(_a[2]))); break;
        case 5: _t->sendEvent((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 6: _t->finish((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 7: _t->inject(); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        void **func = reinterpret_cast<void **>(_a[1]);
        {
            typedef void (Chimera::*_t)();
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&Chimera::unlockSignal)) {
                *result = 0;
            }
        }
    }
}

const QMetaObject Chimera::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Chimera.data,
      qt_meta_data_Chimera,  qt_static_metacall, 0, 0}
};


const QMetaObject *Chimera::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Chimera::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_Chimera.stringdata))
        return static_cast<void*>(const_cast< Chimera*>(this));
    return QObject::qt_metacast(_clname);
}

int Chimera::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 8)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 8;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 8)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 8;
    }
#ifndef QT_NO_PROPERTIES
      else if (_c == QMetaObject::ReadProperty) {
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< QString*>(_v) = content(); break;
        case 1: *reinterpret_cast< QString*>(_v) = loadStatus(); break;
        case 2: *reinterpret_cast< QString*>(_v) = state(); break;
        case 3: *reinterpret_cast< QString*>(_v) = userAgent(); break;
        case 4: *reinterpret_cast< QVariantMap*>(_v) = viewportSize(); break;
        }
        _id -= 5;
    } else if (_c == QMetaObject::WriteProperty) {
        void *_v = _a[0];
        switch (_id) {
        case 0: setContent(*reinterpret_cast< QString*>(_v)); break;
        case 2: setState(*reinterpret_cast< QString*>(_v)); break;
        case 3: setUserAgent(*reinterpret_cast< QString*>(_v)); break;
        case 4: setViewportSize(*reinterpret_cast< QVariantMap*>(_v)); break;
        }
        _id -= 5;
    } else if (_c == QMetaObject::ResetProperty) {
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 5;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 5;
    } else if (_c == QMetaObject::RegisterPropertyMetaType) {
        if (_id < 5)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 5;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}

// SIGNAL 0
void Chimera::unlockSignal()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}
QT_END_MOC_NAMESPACE
